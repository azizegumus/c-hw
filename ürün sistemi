#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_URUN 100

typedef struct {
    char kod[10];
    char isim[50];
    float fiyat;
    int stok;
    int aktif;
} Urun;

void urun_kodu_olustur(char *kod, int index) {
    sprintf(kod, "U%03d", index + 1);
}

Urun* urun_olustur(int index) {
    Urun* yeni = (Urun*)malloc(sizeof(Urun));
    urun_kodu_olustur(yeni->kod, index);

    printf("Ürün adı: ");
    scanf(" %[^\n]", yeni->isim);
    printf("Fiyat: ");
    scanf("%f", &yeni->fiyat);
    printf("Stok: ");
    scanf("%d", &yeni->stok);
    yeni->aktif = 1;

    return yeni;
}

void urun_goster(Urun* u) {
    if (u->aktif) {
        printf("Kod: %s | Ad: %s | Fiyat: %.2f TL | Stok: %d\n", u->kod, u->isim, u->fiyat, u->stok);
    }
}

void urunleri_listele(Urun* liste[], int sayi) {
    printf("\n--- Ürünler ---\n");
    for (int i = 0; i < sayi; i++) {
        urun_goster(liste[i]);
    }
}

void urun_guncelle(Urun* liste[], int sayi) {
    char aranan[10];
    printf("Güncellenecek ürün kodunu girin: ");
    scanf("%s", aranan);

    for (int i = 0; i < sayi; i++) {
        if (liste[i]->aktif && strcmp(liste[i]->kod, aranan) == 0) {
            printf("Yeni ad: ");
            scanf(" %[^\n]", liste[i]->isim);
            printf("Yeni fiyat: ");
            scanf("%f", &liste[i]->fiyat);
            printf("Yeni stok: ");
            scanf("%d", &liste[i]->stok);
            printf("Ürün güncellendi.\n");
            return;
        }
    }
    printf("Ürün bulunamadı.\n");
}

void urun_sil(Urun* liste[], int sayi) {
    char aranan[10];
    printf("Silinecek ürün kodunu girin: ");
    scanf("%s", aranan);

    for (int i = 0; i < sayi; i++) {
        if (liste[i]->aktif && strcmp(liste[i]->kod, aranan) == 0) {
            liste[i]->aktif = 0;
            printf("Ürün silindi.\n");
            return;
        }
    }
    printf("Ürün bulunamadı.\n");
}

int main() {
    Urun* urun_listesi[MAX_URUN];
    int urun_sayisi = 0;
    int secim;

    do {
        printf("\n--- MENÜ ---\n");
        printf("1. Ürün Ekle\n");
        printf("2. Ürünleri Göster\n");
        printf("3. Ürün Güncelle\n");
        printf("4. Ürün Sil\n");
        printf("0. Çıkış\n");
        printf("Seçiminiz: ");
        scanf("%d", &secim);

        switch (secim) {
            case 1:
                if (urun_sayisi < MAX_URUN) {
                    urun_listesi[urun_sayisi] = urun_olustur(urun_sayisi);
                    urun_sayisi++;
                    printf("Ürün eklendi.\n");
                } else {
                    printf("Ürün limiti doldu!\n");
                }
                break;
            case 2:
                urunleri_listele(urun_listesi, urun_sayisi);
                break;
            case 3:
                urun_guncelle(urun_listesi, urun_sayisi);
                break;
            case 4:
                urun_sil(urun_listesi, urun_sayisi);
                break;
            case 0:
                printf("Çıkılıyor...\n");
                break;
            default:
                printf("Geçersiz seçim.\n");
        }
    } while (secim != 0);

    // Bellek temizliği
    for (int i = 0; i < urun_sayisi; i++) {
        free(urun_listesi[i]);
    }

    return 0;
}
